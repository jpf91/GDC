# This file contains some common rules for D source compilation
# used for libdruntime and libphobos

# If there are no sources with known extension (i.e. only D sources)
# automake forgets to set this
CCLD = $(CC)

# Compile D into normal object files
.d.o:
	$(GDC) $(DFLAGS) $(MULTIFLAGS) $(D_EXTRA_DFLAGS) -c -o $@ $<

# Compile D sources with libtool
.d.lo:
	$(LTDCOMPILE) $(DFLAGS) $(MULTIFLAGS) $(D_EXTRA_DFLAGS) -c -o $@ $<

LTDCOMPILE = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(GDC) $(AM_DFLAGS)

# Unittest rules. Unfortunately we can't use _DFLAGS in automake without
# explicit D support, so use this hack.
# Compile D sources with libtool and test flags
%.t.lo : %.d
	$(LTDCOMPILE) $(DFLAGSX) $(MULTIFLAGS) $(D_EXTRA_DFLAGS) -c -o $@ $<

# Compile objects for static linking with test flags
# Automake breaks empty rules, so use the shell NOP :
%.t.o : %.t.lo
	:

# Override executable linking commands: We have to use GDC for linking
unittest_static_LINK = $(LIBTOOL) --tag=CC \
	$(unittest_static_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(GDC) $(AM_CFLAGS) $(CFLAGS) $(unittest_static_LDFLAGS) \
	$(LDFLAGS) -o $@

unittest_LINK = $(LIBTOOL) --tag=CC \
	$(unittest_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(GDC) $(AM_CFLAGS) $(CFLAGS) $(unittest_LDFLAGS) \
	$(LDFLAGS) -o $@
